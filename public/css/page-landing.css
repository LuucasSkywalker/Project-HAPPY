#page-landing {
  background: linear-gradient(329.54deg, #29b6d1 0%, #00c7c7 100%);
  text-align: center;
  min-height: 100vh; /*(min-height: 100vh; está dizendo para ocupar 100% da tela visivel )*/

  display: flex; /*display da tela, alinhar coisas dentro da tela*/
  align-items: center; /*irá alinhar em cima e em baixo colocando no centro tudo da
                          tags selecionada, que no caso é a #page-landing. */
}
#container {
  margin: auto;
  /*centraliza tudo, ou seja faz uma margem dos lados, cima e 
  baixo se estiver dentro de uma tag que estiver usando display:flex; 
  se não ele só alinha as laterais  */
  width: min(90%, 112rem);
  /* a largura do container está dizendo que o minimo é (90% da largura para 1120px
  ou 112rem que vale 1120, assim haverá uma margem lateral não deixando encostar 
  nas laterais o conteudo em geral mesmo com variaçao do tamanho da tela*/
}
.location,
h1,
.visit p {
  /*dentro da class pode procurar um elemento especifico
  (.visit "<p>" onde ele procura o elemento "<p>")*/
  height: 16vh;
}
.visit a {
  /*Corpo Botão*/
  width: 8rem;
  height: 8rem;
  background: #ffd666;

  border: nome; /*Opção para tirar bordar atuais*/
  border-radius: 3rem; /*acrescentand 3rem de borda*/

  display: flex; /*usando para alinhar a seta e circulo dentro */
  align-items: center; /*definindo seta no centro de altura"*/
  justify-content: center; /*regra (center) usado para centralizar o objeto dentro do circulo*/

  margin: auto;
}
.visit a:hover {
  /*Efeito no Botão*/
  background: #96feff; /*está função está perguntando se o mouse está em cima dele(hover)*/
}
#logo {
  animation-delay: 50ms; /*adicionando delay para cada parte das tags apareça com delay*/
}
.location {
  animation-delay: 100ms;
}
main h1 {
  animation-delay: 150ms;
  font-size: clamp(4rem, 8vw, 8.4rem);
  /* no texto do (<h1>) está usando a opção "clamp" no font-size para dizer o
  tamanho minimo da fonte, o tamanho ideal da fonte, e o tamanho maximo da fonte.
  São usados três valores dentro (min,ideal(view width),max)
  IMPORTANTE "não colocar espaço entre 'clamp=>()' usar sem espaço nos parenteses"*/
}
.visit p {
  animation-delay: 200ms;
}
.visit a {
  animation-delay: 250ms;
}
/**************************************************************/
/* VERSÃO DESKTOP */

@media (min-width: 760px) {
  /* essa regra só entra se for verdadeira ou falso, no caso
    ela tem que ser verdadeira. Se for maior o tamanho de 760px
    irá execultar o bloco ou as regras de css dentro do bloco */

  #container {
    /*IMAGEM DE FUNDO - DENTRO DO CONTAINER*/
    /* shorthand background: image repeat position / size */
    background: url("../images/bg.svg") no-repeat 80% /
      clamp(30rem, 54vw, 56rem);
    /* Colocando imagem de fundo 'url' (usasse para sair da pasta atual e ir nas
      imagens "../" para jogar para cima a pasta. url("../images/e a imagem selecionada")
      após usar, coloque a frente "no-repeat" para não repetir a imagem . 
      O valor a frente (80%) refere-se ao tamanho da imagem. A (/) é usada para setar 
      o ("size" ou 'tamanho') dentro do shorthand do background. Logo após a (/) do size
      usar o clamp() para determinar o tamanho da imagem do background para flexibilidade
      de diferentes telas. IMPORTANTE "não colocar espaço entre 'clamp=>()' usar sem 
      espaço nos parenteses"*/

    padding: 5rem 2rem;
    /*padding é para aumentar o container para preenchimento da imagem se tiver com
      algum recorte ou algo do gênero, ele expande. (5rem funciona para cima e baixo
      e 2rem é para as laterais) */
  }
  header {
    display: flex; /*alinhando o header*/
    align-items: center;
    justify-content: space-between;
    /*(space-between) significa colocar espaço. Aqui entre 
    a logo que está na <HEADER> e entre o .class="Location". A Opção de justify content, só funciona
    se tiver um display:flex ou display:grid*/
  }
  .location,
  main h1,
  .visit p {
    height: initial; /* retorna valor inicial para alinhar com a <header> acima*/
    text-align: initial; /*retorna para inicial o <h1>*/
  }
  .location {
    text-align: right; /*colocando a localização alinhada a direita */
    font-size: 2.4rem; /*tamanho da fonte*/
    line-height: 3.4rem; /*espaçamento na localização da linha de cima e de baixo*/
  }
  main h1 {
    font-weight: bold;
    line-height: 0.88; /*colocando espaçamento no <h1>*/

    margin: clamp(10%, 9vh, 12%) 0 4rem;
    /* usando o clamp novamente para dizer sobre a margin entre o <h1>,<p> e a logo
    normalmente uma margin é feita assim (margin:altura,lados,baixo) o valor 4rem
    é para dá um espaçamento do (<h1> e o <p>)*/

    width: min(300px, 80%);
    /*está colocando a largura do texto, limitando o texto em 300px ou 30rem,
    deixando cada parte em baixo da outra por essa limitação */
  }
  .visit {
    /*colocando o .visit dentro de um display alinhando com o botão*/
    display: flex; /*alinhar com <p> e <a>*/
    align-items: center;
    justify-content: space-between; /*colocando <p> e <a> de cada lado*/
  }
  .visit p {
    font-size: 2.4rem; /*tamanho da fonte da localização*/
    line-height: 3rem; /*espaçamento entre cidade e estado*/
    width: clamp(20rem, 20vw, 30rem);
    /*colocando clamp para responsividade para cada tela*/
  }
  .visit a {
    margin: initial;
  }
}
